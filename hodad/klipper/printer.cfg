[include mainsail.cfg]

# host MCU service is preinstalled and ready to use with:
[mcu host]
serial: /tmp/klipper_host_mcu

[temperature_sensor chamber]
sensor_type: DS18B20
serial_no: 28-3c01d6076acb
sensor_mcu: host
min_temp: 0
max_temp: 100
gcode_id: C

# MOSFETS on PC15 (header pin 37, GPIO79), PC6 (header pin 35, GPIO70), PI14 (header pin 33, GPIO270), PI5 (header pin 31, GPIO261)
#[output_pin caselight]
#pin: host:gpio79
##pwm: true
##hardware_pwm: true
#shutdown_value: 0
#value: 1
##cycle_time: 0.001


[gcode_macro _FS_RUNOUT]
gcode:
  M300 S660 P300  ; BEE
  M300 S440 P300  ; BOOP
  RESPOND TYPE=error MSG="Filament Runout"  ; Display a console message
  M117 "Filament Runout"  ; Display a message on the LCD
  PAUSE   ; Call the pause macro

[gcode_macro _FS_ENABLE]
gcode:
  SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=1
  SET_FILAMENT_SENSOR SENSOR=filament_motion ENABLE=1  ; Uncomment this line if you are using the SFS V2

[gcode_macro _FS_DISABLE]
gcode:
  SET_FILAMENT_SENSOR SENSOR=filament_switch ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=filament_motion ENABLE=0  ; Uncomment this line if you are using the SFS V2
  
[filament_switch_sensor filament_switch]
switch_pin: ^host:gpio231    # Use the correct pin for your mainboard.
pause_on_runout: False
runout_gcode: _FS_RUNOUT

[filament_motion_sensor filament_motion]
switch_pin: ^host:gpio232    # Use the correct pin for your mainboard.
extruder: extruder
pause_on_runout: False
detection_length: 2.88
runout_gcode: _FS_RUNOUT

[include bigtreetech-skr-pico-v1.0.cfg]
[include V0Display.cfg]
[include DisplayMenu.cfg]
[include klipper-expander.cfg]
[include StartupMacros.cfg]
[include macros/TEST_SPEED.cfg]
[include config/beeper.cfg]
#[include config/bttpi_spi_adxl345.cfg]
[include ebb36.cfg]
[include config/hotend/revo.cfg]
[include config/extruder/orbiter.cfg]
[include config/aux_fan.cfg]
[include K-ShakeTune/*.cfg]

## Client variable macro for your printer.cfg
[gcode_macro _CLIENT_VARIABLE]
#variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
#variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
#variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
#variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
#variable_retract          : 1.0   ; the value to retract while PAUSE
#variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract    : 35.0  ; retract speed in mm/s
#variable_unretract        : 1.0   ; the value to unretract while RESUME
#variable_speed_unretract  : 35.0  ; unretract speed in mm/s
#variable_speed_hop        : 15.0  ; z move speed in mm/s
#variable_speed_move       : 100.0 ; move speed in mm/s
#variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
#variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
#variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
#variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
variable_runout_sensor    : "filament_switch_sensor filament_switch"    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything insight the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything insight the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything insight the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:

[extruder]
#control: pid                                                        # Do PID calibration after initial checks
#pid_Kp: 28.182
#pid_Ki: 1.978
#pid_Kd: 100.397

[heater_bed]
#control: pid                                                        # Do PID calibration after initial checks
#pid_Kp: 28.182
#pid_Ki: 1.978
#pid_Kd: 100.397

[stepper_z]
#position_endstop: 120

[endstop_phase]

[exclude_object]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 27.227
#*# pid_ki = 3.241
#*# pid_kd = 57.178
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 59.093
#*# pid_ki = 2.736
#*# pid_kd = 319.105
#*#
#*# [stepper_z]
#*# position_endstop = 119.455
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 73.8
#*# shaper_type_y = 2hump_ei
#*# shaper_freq_y = 80.0
