[pause_resume]

[display_status]

[stepper_a]
step_pin: gpio11
dir_pin: gpio10
enable_pin: !gpio12
microsteps: 16
rotation_distance: 28
#endstop_pin: ^PC0
endstop_pin: tmc2209_stepper_a:virtual_endstop
homing_speed: 25
homing_retract_dist: 0
#arm_length: 120.8
#position_endstop: 126

[tmc2209 stepper_a]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999
diag_pin: ^gpio4
driver_SGTHRS: 52

[stepper_b]
step_pin: gpio6
dir_pin: gpio5
enable_pin: !gpio7
microsteps: 16
rotation_distance: 28
#endstop_pin: ^gpio3
endstop_pin: tmc2209_stepper_b:virtual_endstop
#position_endstop: 126
#arm_length: 120.8

[tmc2209 stepper_b]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999
diag_pin: ^gpio3
driver_SGTHRS: 52

[stepper_c]
step_pin: gpio19
dir_pin: gpio28
enable_pin: !gpio2
#endstop_pin: ^gpio25
endstop_pin: tmc2209_stepper_c:virtual_endstop
microsteps: 16
rotation_distance: 28
#position_endstop: 126
#arm_length: 120.8

[tmc2209 stepper_c]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999
diag_pin: ^gpio25
driver_SGTHRS: 52

[extruder]
step_pin: gpio14
dir_pin: !gpio13
enable_pin: !gpio15
microsteps: 16
#rotation_distance: 33 ; "old red"
rotation_distance: 21.404 ; "new red" with gears
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: gpio23
sensor_type: EPCOS 100K B57560G104F
sensor_pin: gpio27
#control: pid
#pid_Kp: 35.468
#pid_Ki: 1.487
#pid_Kd: 211.476
min_temp: 0
max_temp: 285
max_extrude_only_distance: 500

[tmc2209 extruder]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 3
run_current: 0.650
hold_current: 0.500
stealthchop_threshold: 5

[heater_bed]
heater_pin: gpio21
sensor_type: ATC Semitec 104GT-2
sensor_pin: gpio26
#control: pid
#pid_Kp: 62.708
#pid_Ki: 6.240
#pid_Kd: 157.555
min_temp: 0
max_temp: 130

[heater_fan heatbreak_cooling_fan]
pin: gpio18
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[heater_fan controller_fan]
pin: gpio20

[fan]
pin: gpio17

[mcu]
#serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_30FFDA054E4E353717730551-if00
serial: /dev/ttyAMA0
#baud: 250000
restart_method: command

[mcu host]
serial: /tmp/klipper_host_mcu

[printer]
kinematics: delta
#delta_radius: 63.2
#print_radius: 55
max_velocity: 300
max_accel: 3000
max_z_velocity: 150
minimum_z_position: -10.0

[delta_calibrate]
radius: 55
speed: 30
horizontal_move_z: 10

[bed_mesh]
speed: 50
horizontal_move_z: 5
mesh_radius: 55 #50
round_probe_count: 5
fade_start: 1.0
fade_end: 0.0

[virtual_sdcard]
path: ~/gcode_files

#[static_digital_output usb_pullup_enable]
#pins: !PC13

[probe]
pin: ^!gpio22
x_offset: 0.0
y_offset: 0.0
z_offset: -0.394
speed: 5.0
samples: 2
sample_retract_dist: 2.0
samples_result: average
samples_tolerance: 0.100
samples_tolerance_retries: 0

[delayed_gcode update_zprobe]
initial_duration: 0.0
gcode:
    QUERY_PROBE
    UPDATE_DELAYED_GCODE ID=update_zprobe DURATION=0.1

[display_template get_zprobe]
text:
    { printer.probe.last_query }

[display_template zprobe_led_color]
text:
    {% set zprobe_state = render("get_zprobe")|float %}
    {% if zprobe_state %}
	1.0, 0.0, 0.0, 0.0
    {% else %}
        1.0, 1.0, 1.0, 0.0
    {% endif %}

[gcode_macro ZPROBE_LIGHTS_ON]
gcode:
    UPDATE_DELAYED_GCODE ID=update_zprobe DURATION=0.1
    SET_LED_TEMPLATE LED=chassis_neopixel INDEX=1 TEMPLATE=get_zprobe

[gcode_macro ZPROBE_LIGHTS_OFF]
gcode:
    UPDATE_DELAYED_GCODE ID=update_zprobe DURATION=0.0
    SET_LED_TEMPLATE LED=chassis_neopixel INDEX=1 TEMPLATE=


#[delayed_gcode startup_gcode]
#initial_duration: 0.1
#gcode:
#    SET_LED_TEMPLATE LED=chassis_neopixel INDEX=1 TEMPLATE=get_zprobe

[gcode_arcs]
resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

#[board_pins]
#aliases:
#    # EXP1 header
#    EXP1_1=PB5, EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
#    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB15, EXP1_10=<5V>
#
#    #BEEPER=PB5

[neopixel chassis_neopixel]
pin: gpio24
chain_count: 17
color_order: GRB
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0

[gcode_macro chassis_led_off]
gcode:
    SET_LED LED=chassis_neopixel RED=0.0 GREEN=0.0 BLUE=0.0

[gcode_macro chassis_led_white]
gcode:
    SET_LED LED=chassis_neopixel RED=1.0 GREEN=1.0 BLUE=1.0

[gcode_macro chassis_led_purple]
gcode:
    SET_LED LED=chassis_neopixel RED=1.0 GREEN=0.0 BLUE=1.0


######################################################################
# Beeper
######################################################################

# M300 : Play tone. Beeper support, as commonly found on usual LCD
# displays (i.e. RepRapDiscount 2004 Smart Controller, RepRapDiscount
# 12864 Full Graphic). This defines a custom I/O pin and a custom
# GCODE macro.  Usage:
#   M300 [P<ms>] [S<Hz>]
#   P is the tone duration, S the tone frequency.
# The frequency won't be pitch perfect.

#[output_pin BEEPER_pin]
#pin: EXP1_1
##   Beeper pin. This parameter must be provided.
##   ar37 is the default RAMPS/MKS pin.
#pwm: True
##   A piezo beeper needs a PWM signal, a DC buzzer doesn't.
#value: 0
##   Silent at power on, set to 1 if active low.
#shutdown_value: 0
##   Disable at emergency shutdown (no PWM would be available anyway).
#cycle_time: 0.001
##   Default PWM frequency : 0.001 = 1ms will give a tone of 1kHz
##   Although not pitch perfect.

#[gcode_macro M300]
#gcode:
#    # Use a default 1kHz tone if S is omitted.
#    {% set S = params.S|default(1000)|int %}
#    # Use a 10ms duration is P is omitted.
#    {% set P = params.P|default(100)|int %}
#    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
#    G4 P{P}
#    SET_PIN PIN=BEEPER_pin VALUE=0

#[display]
#lcd_type: emulated_st7920
#en_pin: EXP1_7
#spi_software_sclk_pin: EXP1_6
#spi_software_mosi_pin: EXP1_8
#spi_software_miso_pin: PA1
#encoder_pins: ^EXP1_5, ^EXP1_3
#click_pin: ^!EXP1_2

# Filament Sensor
[filament_motion_sensor btt_smartie]
#detection_length: 7.0
detection_length: 10.0
extruder: extruder
switch_pin: !gpio16
#runout_gcode: FILAMENT_RUNOUT

[gcode_macro FILAMENT_RUNOUT]
gcode:
    M300 S1 P10
    M600
    M300 S1 P10

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.
[gcode_macro M600]
gcode:
    {% set X = params.X|default(0)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z_LIFT = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91 ; Set relative positioning
    G1 E-.8 F2700
    G1 Z{Z_LIFT}
    G90 ; Set Absolute positioning
    G1 X{X} Y{Y} F3000
    G91
    G1 E-400 F3000
    RESTORE_GCODE_STATE NAME=M600_state

# G-Code macros (one may define any number of sections with a
# "gcode_macro" prefix).
[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(80)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
    {% set CALIBRATE = params.CALIBRATE|default('true') %}
    G90 ; switch to absolute positioning - this line was added in case Cura doesn't include it by default
    M82 ; set extruder to absolute mode - this line was added in case Cura doesn't include it by default
    G28 ; start from home position
    #SET_GCODE_OFFSET Z=-0.160
    M140 S{BED_TEMP}
    {% if CALIBRATE and CALIBRATE != 'false' %}
    M117 Warming up for calibration...
    M109 S170 T0 ; set extruder to a no-ooze temperature
    M190 S{BED_TEMP}        # Wait for bed to reach temperature
    M117 Calibrating bed
    BED_MESH_CALIBRATE
    G0 X0 Y0 Z15.0 F3600
    {% endif %}
    M117 Warming up...
    M104 S{EXTRUDER_TEMP}
    {% if not CALIBRATE or CALIBRATE == 'false' %}
      M190 S{BED_TEMP}
    {% endif %}
    M109 S{EXTRUDER_TEMP}   # Set and wait for nozzle to reach temperature
    M117 Purging
    G4 S4
    ; extrude a strip outside of the perimeter
    G92 E0
    G1 X-54 Y0 Z0.32 F2700
    G3 X0 Y-54 I54 E20 F900
    G92 E0
    ; switch to absolute positioning
    G90
    ; display printing banner
    M117 Printing


[gcode_macro timer]
gcode:
    M117 1
    G4 P60000 ; 
    M117 2




[gcode_macro END_PRINT]
gcode:
    M104 S0 ; turn off hotend heater
    M140 S0 ; turn off bed heater
    G91 ; Switch to use Relative Coordinates
    G1 E-3 F700 ; retract the filament a bit before lifting the nozzle to release some of the pressure
    G1 Z15 F1000 ; raise platform 2mm from current position
    G1 E-10 F700 ; retract filament even more
    G90 ; Switch back to using absolute coordinates
    G28 ; Return to home position. Without an X Y or Z after G28 the prin on the Mini Delta's display.
    M84 ; disable motors
    M117 Ready


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max position from your printer.cfg
  #{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  #{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set x_park = 40 %}
  {% set y_park = -40 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 



[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}



[gcode_macro PID_BED]
description: PID tune bed heater
gcode:
    {% set t = params.BED_TEMP|default(85)|float %}
    PID_CALIBRATE HEATER=heater_bed TARGET={t}
    #TURN_OFF_HEATERS

[gcode_macro PID_EXTRUDER]
description: PID EXTRUDER 225C
gcode:
    {% set t = params.EXTRUDER_TEMP|default(225)|float %}
    PID_CALIBRATE HEATER=extruder TARGET={t}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    M117 Cancelling... womp womp womp woooomp.
    G91 ; Switch to use Relative Coordinates
    G1 E-3 F700 ; retract the filament a bit before lifting the nozzle to release some of the pressure
    G1 Z15 F1000 ; raise platform 2mm from current position
    G1 E-10 F700 ; retract filament even more
    G90 ; Switch to absolute
    ; return to home
    G28
    ; turn off heaters
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    M117 Cancelled.

[gcode_macro TEST_MVF]
gcode:
    {% set EXTRUSION_RATE = params.EXTRUSION_RATE|default(300)|float %}
    M83
    G1 F{EXTRUSION_RATE}
    G1 E20
    M117 Clean me!
    G1 F3
    M117 Continuing.
    G1 E0.1
    G1 F{EXTRUSION_RATE}
    G1 E250
    G1 E250

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set LOAD_DISTANCE = params.LOAD_DISTANCE|default(400)|float %}
    {% set PURGE_DISTANCE = params.LOAD_DISTANCE|default(10)|float %}
    G1 E{LOAD_DISTANCE} F5000
    G1 E{PURGE_DISTANCE} F300
    G1 E-2 F300

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set LOAD_DISTANCE = params.LOAD_DISTANCE|default(400)|float %}
    G1 E-{LOAD_DISTANCE} F5000

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.323
#*# pid_ki = 1.600
#*# pid_kd = 125.331
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 59.427
#*# pid_ki = 6.715
#*# pid_kd = 131.482
#*#
#*# [printer]
#*# delta_radius = 60.119048
#*#
#*# [stepper_a]
#*# angle = 212.267836
#*# arm_length = 120.800000
#*# position_endstop = 123.769683
#*#
#*# [stepper_b]
#*# angle = 332.554698
#*# arm_length = 120.800000
#*# position_endstop = 124.351153
#*#
#*# [stepper_c]
#*# angle = 90.000000
#*# arm_length = 120.800000
#*# position_endstop = 122.982194
#*#
#*# [delta_calibrate]
#*# height0 = -0.394
#*# height0_pos = 14179.500,14179.500,14179.500
#*# height1 = -0.394
#*# height1_pos = 18303.000,18303.000,12276.500
#*# height2 = -0.394
#*# height2_pos = 13991.000,21157.000,13991.000
#*# height3 = -0.394
#*# height3_pos = 12406.000,17640.000,17640.000
#*# height4 = -0.394
#*# height4_pos = 13835.500,13835.500,18667.500
#*# height5 = -0.394
#*# height5_pos = 17028.500,12516.500,17028.500
#*# height6 = -0.394
#*# height6_pos = 19654.500,13793.500,13793.500
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.424278, -0.424278, -0.424278, -0.424278, -0.424278
#*# 	-0.186288, -0.186288, -0.140458, 0.043183, 0.043183
#*# 	0.190939, -0.124607, -0.051445, 0.064944, 0.012636
#*# 	0.175932, 0.175932, 0.160046, -0.093571, -0.093571
#*# 	0.252872, 0.252872, 0.252872, 0.252872, 0.252872
#*# tension = 0.2
#*# min_x = -55.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = -55.0
#*# x_count = 5
#*# max_y = 55.0
#*# mesh_x_pps = 2
#*# max_x = 55.0
