[gcode_macro FILAMENT_RUNOUT]
gcode:
    M300 S1 P10
    M600
    M300 S1 P10

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.
[gcode_macro M600]
gcode:
    {% set X = params.X|default(0)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z_LIFT = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91 ; Set relative positioning
    G1 E-.8 F2700
    G1 Z{Z_LIFT}
    G90 ; Set Absolute positioning
    G1 X{X} Y{Y} F3000
    G91
    G1 E-400 F3000
    RESTORE_GCODE_STATE NAME=M600_state


[idle_timeout]
timeout: 1800
gcode:
    SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=board_fans TARGET=38

# G-Code macros (one may define any number of sections with a
# "gcode_macro" prefix).
[gcode_macro START_PRINT]
gcode:
    SET_FILAMENT_SENSOR SENSOR=btt_smartie ENABLE=0
    SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=board_fans TARGET=30
    {% set BED_TEMP = params.BED_TEMP|default(80)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
    {% set CALIBRATE = params.CALIBRATE|default('false') %}
    G90 ; switch to absolute positioning - this line was added in case Cura doesn't include it by default
    M82 ; set extruder to absolute mode - this line was added in case Cura doesn't include it by default
    G28 ; start from home position
    #SET_GCODE_OFFSET Z=-0.160
    M140 S{BED_TEMP}
    {% if CALIBRATE and CALIBRATE != 'false' %}
    M117 Warming up for calibration...
    M109 S170 T0 ; set extruder to a no-ooze temperature
    M190 S{BED_TEMP}        # Wait for bed to reach temperature
    M117 Calibrating bed
    BED_MESH_CALIBRATE
    G0 X0 Y0 Z15.0 F3600
    {% endif %}
    M117 Warming up...
    M104 S{EXTRUDER_TEMP}
    {% if not CALIBRATE or CALIBRATE == 'false' %}
      M190 S{BED_TEMP}
    {% endif %}
    M109 S{EXTRUDER_TEMP}   # Set and wait for nozzle to reach temperature
    M117 Purging
    G4 S4
    ; extrude a strip outside of the perimeter
    G92 E0
    G1 X-54 Y0 Z0.32 F2700
    G3 X0 Y-54 I54 E20 F900
    G92 E0
    ; switch to absolute positioning
    G90
    SET_FILAMENT_SENSOR SENSOR=btt_smartie ENABLE=1
    ; display printing banner
    M117 Printing


[gcode_macro timer]
gcode:
    M117 1
    G4 P60000 ; 
    M117 2

[gcode_macro END_PRINT]
gcode:
    SET_FILAMENT_SENSOR SENSOR=btt_smartie ENABLE=0
    M104 S0 ; turn off hotend heater
    M140 S0 ; turn off bed heater
    G1 E-3 F700 ; retract the filament a bit before lifting the nozzle to release some of the pressure
    G1 Z15 F1000 ; raise platform 2mm from current position
    G1 E-3 F700 ; retract filament even more
    G90 ; Switch back to using absolute coordinates
    G1 X0 Y0 Z122 ; Move printhead out of the way
    ;G28 ; Return to home position. Without an X Y or Z after G28 the prin on the Mini Delta's display.
    M400 ; Wait
    M117 Ready

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max position from your printer.cfg
  #{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  #{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set x_park = 40 %}
  {% set y_park = -40 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 



[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}



[gcode_macro PID_BED]
description: PID tune bed heater
gcode:
  {% set t = params.BED_TEMP|default(85)|float %}
  PID_CALIBRATE HEATER=heater_bed TARGET={t}
  #TURN_OFF_HEATERS

[gcode_macro PID_EXTRUDER]
description: PID EXTRUDER 225C
gcode:
  {% set t = params.EXTRUDER_TEMP|default(225)|float %}
  PID_CALIBRATE HEATER=extruder TARGET={t}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  M117 Cancelling... womp womp womp woooomp.
  G1 E-3 F700 ; retract the filament a bit before lifting the nozzle to release some of the pressure
  G1 Z15 F1000 ; raise platform 2mm from current position
  G1 E-10 F700 ; retract filament even more
  G90 ; Switch back to using absolute coordinates
  G1 X0 Y0 Z120 ; Move print head to top
  ; G28 ; Return to home position. Without an X Y or Z after G28 the prin on the Mini Delta's display.
  M400 ; Wait
  ; turn off heaters
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  M117 Cancelled.

[gcode_macro TEST_MVF]
gcode:
  {% set EXTRUSION_RATE = params.EXTRUSION_RATE|default(300)|float %}
  M83
  G1 F{EXTRUSION_RATE}
  G1 E20
  M117 Clean me!
  G1 F3
  M117 Continuing.
  G1 E0.1
  G1 F{EXTRUSION_RATE}
  G1 E250
  G1 E250

[gcode_macro LOAD_FILAMENT]
gcode:
  {% set LOAD_DISTANCE = params.LOAD_DISTANCE|default(400)|float %}
  {% set PURGE_DISTANCE = params.PURGE_DISTANCE|default(10)|float %}
  G91
  G1 E{LOAD_DISTANCE} F5000
  G1 E{PURGE_DISTANCE} F60
  G1 E-2 F60

[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% set LOAD_DISTANCE = params.LOAD_DISTANCE|default(400)|float %}
  G91
  G1 E-10 F60
  G1 E-{LOAD_DISTANCE} F5000

[delayed_gcode shutdown_machine]
initial_duration: 0.0
gcode:
  {action_call_remote_method("shutdown_machine")}

# [menu __main __octoprint __poweroff]
# type: command
# enable: {printer.idle_timeout.state != "Printing"}
# name: Turn off Pi
# gcode:
#   M117 Shutdown_RPI
#   M118 Shutdown_RPI
#   { menu.exit() }
#   UPDATE_DELAYED_GCODE ID=shutdown_machine DURATION=1
