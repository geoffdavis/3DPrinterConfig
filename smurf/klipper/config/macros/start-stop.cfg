[gcode_macro START_PRINT]
gcode:
    SET_FILAMENT_SENSOR SENSOR=btt_smartie ENABLE=0
    SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=board_fans TARGET=30
    {% set BED_TEMP = params.BED_TEMP|default(80)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
    {% set CALIBRATE = params.CALIBRATE|default('false') %}
    G90 ; switch to absolute positioning - this line was added in case Cura doesn't include it by default
    M82 ; set extruder to absolute mode - this line was added in case Cura doesn't include it by default
    G28 ; start from home position
    #SET_GCODE_OFFSET Z=-0.160
    M140 S{BED_TEMP}
    {% if CALIBRATE and CALIBRATE != 'false' %}
    M117 Warming up for calibration...
    M109 S170 T0 ; set extruder to a no-ooze temperature
    M190 S{BED_TEMP}        # Wait for bed to reach temperature
    M117 Calibrating bed
    BED_MESH_CALIBRATE
    G0 X0 Y0 Z15.0 F3600
    {% endif %}
    M117 Warming up...
    M104 S{EXTRUDER_TEMP}
    {% if not CALIBRATE or CALIBRATE == 'false' %}
      M190 S{BED_TEMP}
    {% endif %}
    M109 S{EXTRUDER_TEMP}   # Set and wait for nozzle to reach temperature
    M117 Purging
    SET_FILAMENT_SENSOR SENSOR=btt_smartie ENABLE=0
    G4 S4
    ; extrude a strip outside of the perimeter - assumes slicer limits to -55
    G92 E0
    G1 E18 F700 ; prime filament
    #G1 X0 Y57 Z0.32 F2700
    #G3 X-57 Y0 J-57 E6.5 F900
    #G3 X0 Y-57 I57 E6.5 F900
      ; switch to absolute positioning
    G90
    SET_FILAMENT_SENSOR SENSOR=btt_smartie ENABLE=1
    G92 E0 ; Zero extruder position
    ; display printing banner
    M117 Printing

[gcode_macro END_PRINT]
gcode:
    SET_FILAMENT_SENSOR SENSOR=btt_smartie ENABLE=0
    M104 S0 ; turn off hotend heater
    M140 S0 ; turn off bed heater
    G91 ; switch to relative coordinates
    G1 E-2 F700 ; retract the filament a bit before lifting the nozzle to release some of the pressure
    #G1 X0 Y0 Z15 F1000 ; raise platform 2mm from current position
    G1 E-18 F700 ; retract filament even more
    G90 ; Switch back to using absolute coordinates
    ;G1 X0 Y0 Z122 ; Move printhead out of the way
    G28 ; Return to home position. Without an X Y or Z after G28 the prin on the Mini Delta's display.
    M400 ; Wait
    M117 Ready

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  # Parameters
  {% set z = params.Z|default(10)|int %}                                                     ; z hop amount

  {% if printer['pause_resume'].is_paused|int == 0 %}
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
                                
        SET_FILAMENT_SENSOR SENSOR=btt_smartie ENABLE=0                                  ; disable filament sensor       
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
        PAUSE_BASE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        _PARKFRONT                                                                           ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        ;M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
  {% endif %}



[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_FILAMENT_SENSOR SENSOR=btt_smartie ENABLE=1                          ; enable filament sensor
        RESETRGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: BASE_CANCEL_PRINT
gcode:
    M117 Cancelling... womp womp womp woooomp.
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    END_PRINT
    BASE_CANCEL_PRINT
    M117 Cancelled.
