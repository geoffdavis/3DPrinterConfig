; Start/stop macros
; Uses heatsoak.cfg

[gcode_macro PRINT_START]
gcode:
    # Parameters
    {% set bedtemp = params.BED|default(60)|int %}
    {% set hotendtemp = params.HOTEND|default(215)|int %}
    {% set chambertemp = params.CHAMBER|default(0)|int %}
    {% set force_bedmesh = params.BEDMESH|default(1)|int %}
    {% set force_qgl = params.FORCE_QGL|default(1)|int %}
    {% set purge = params.PURGE|default("adaptive") %}      ; either "none" or "adaptive"
    {% set initial_tool = params.TOOL|default(0)|int %}
    {% set trad_rack_present = params.TR|default(1)|int %}

    #SET_FILAMENT_SENSOR SENSOR=btt_smartie ENABLE=0                          ; disable filament sensor

    {% if printer["temperature_sensor chamber"].temperature < chambertemp %}
      RESPOND MSG="Chamber Heating"
		  _HEATSOAK TEMP={bedtemp} MOVE=1                    # Set up to heat soak if chamber temp is set higher than current reading
		  M190 S{bedtemp}                                    # Set target bed temp & wait for it
      TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chambertemp}   # Do the actual heat soak wait, until chamber temp is at target
    {% else %}
      RESPOND MSG="Bed Heating"
        {% if printer.heater_bed.temperature < (bedtemp-2) %}
          _HEATSOAK TEMP={bedtemp} MOVE=1	        	 # Bed is below target temp, get it heating & safely park toolhead
          M190 S{bedtemp}                                # Set bed target temp & wait for it
        {% else %}
          _HEATSOAK TEMP={bedtemp} MOVE=0                # Just do a bed heat, no champer temp (open case for PLA)
        {% endif %}
    {% endif %}
    M106 S0                                                  # Turn off part cooling fan from heatsoak

    # Conditionally re-mesh the bed
    {% if force_gql or not printer.quad_gantry_level.applied %}
    led_meshing
    BED_MESH_CLEAR                                           # Clear old bed mesh  
    CALIBRATE_Z
    BED_MESH_CALIBRATE
    LED_STANDBY
    {% elif force_bedmesh %}
    led_meshing
    BED_MESH_CLEAR  
    BED_MESH_CALIBRATE
    LED_STANDBY
    {% else %}
    G28
    {% endif %}

    LED_HEATING
    #G1 X175 Y0 Z20         # Move tool head to safe distance from bed

    {% if trad_rack_present %}
    RESPOND MSG="Loading Tool {initial_tool}"
    CLEAR_PAUSE
    TR_LOCATE_SELECTOR
    T{initial_tool} MIN_TEMP={hotendtemp}
    {% else %}
    RESPOND MSG="Heating nozzle"
    M106 S205
    M109 S{hotendtemp}                                       # Do final nozzle heat
    {% endif %}
    #CLEAN_NOZZLE                                             # Remove ooze

    {% if purge == "adaptive" %}
    RESPOND MSG="Adaptive Purge"
    VORON_PURGE
    {% endif %}

    LED_PRINTING                                             # Prep done, start print
    RESPOND MSG="Printing"
    SONG_SINGLE_BEEP
    #SET_FILAMENT_SENSOR SENSOR=btt_smartie ENABLE=1                          ; enable filament sensor

    #UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed 

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
gcode:
  {% set xy_offset = 20 %}
  {% set filter_off = 300 %}
  {% set retract_dist = 1800 %}
  {% set travel = 20000 %}
  {% set filter_off = 300 %}
  # calculate safe move
  {% set max = printer.toolhead.axis_maximum %}
  {% set act = printer.toolhead.position %}
  {% set safe = {'x': 20.0 if act.x|float < (max.x|float - 20.0) else -20.0,
                 'y': 20.0 if act.y|float < (max.y|float - 20.0) else -20.0,
                 'z':  2.0 if act.z|float < (max.z|float -  2.0) else (max.z|float - act.z|float)} %}
  
  M400                           ; wait for buffer to clear
  #SET_FILAMENT_SENSOR SENSOR=btt_smartie ENABLE=0                          ; disable filament sensor
  G92 E0                         ; zero the extruder
  G1 E-5 F{retract_dist}                ; retract filament
  G91                            ; relative positioning
  G0 Z1.00 X{safe.x} Y{safe.y} Z{safe.z} F{travel}    ; move nozzle to remove stringing
  TURN_OFF_HEATERS
  M107                           ; turn off fan
  G90                            ; absolute positioning
  PARKREAR            ; park nozzle at rear
  UPDATE_DELAYED_GCODE ID=_DELAY_FILTER_OFF DURATION={filter_off}
  ;BED_MESH_CLEAR
  Song_Simpsons
  LED_STANDBY
  M220 S100 ; set feedrate percentage back to default
  M221 S100 ; set speed percentage back to default